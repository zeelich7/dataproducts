install.packages(c("jpeg","jsonlite","data.table","httr","xlsx","XML","magrittr","RMySQL","rJava","dplyr","swirl","quantmod"))
install.packages("ggplot2")
library(RJava)
install.packages("rJava")
install.packages("RCurl")
install.packages("devtools")
devtools::install_github('rstudio/shinyapps')
find_rtools()
library(shiny)
library(shinyapps)
find_rtools()
find_rtools(T)
library(devtools)
find_rtools()
installed.packages()
install.packages(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot)
library(ggplot2)
library(ggplot)
library(ggplot2)
install.packages("colorspace")
library(swirl)
swirl()
all<-lm(Fertility ~.)
all<-lm(Fertility ~.,swiss)
all
summary(all)
summary(lm(Fertility ~ Agriculture,swiss))
cor(Examination,Education)
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec<-swiss$Examination+swiss$Catholic
efit <- lm(Fertility ~. +ec)
efit <- lm(Fertility ~. +ec,swiss)
all$coefficients-efit$coefficients
0
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays,15)
sA
summary(InsectSprays[,2])
sapply(class(InsectSprays))
sapply(InsectSprays,class())
sapply(InsectSprays,class(InsectSprays))
sapply(InsectSprays,class
sapply(InsectSprays,class)
sapply(InsectSprays,class)
fit<-lm(count~spray,InsectSprays)
fit$coefficients
fit$coef
summary(fit)$coef
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit<-lm(count~spray -1,InsectSprays)
summary(nfit$coefficients)
summary(nfit)$coefficients
summary(nfit)$coef
spray2<->relevel(InsectSprays$spray,"C")
spray2<-relevel(InsectSprays$spray,"C")
fit2<-lm(count~spray,spray2)
fit2<-lm(count~spray2,InsectSprays)
summary(fit2)$coeff
summary(fit2)$coef
mean(sC)
(fit$coef[2])-(fit$coef[3])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
dim(hunger)
948
summary(hunger)
names(hunger)
fit(X~Year,hunger)
fit<-lm(X~Year,hunger)
fit <- lm(hunger$Numeric ~ hunger$Year)
summary(fit)$ceof
summary(fit)$coef
x[hunger$Sex=="Female"]
lmF
lmF<-lm(Numeric~Year,x[hunger$Sex=="Female"])
lmF<-lm(Numeric~Year,hunger[hunger$Sex=="Female"])
lmF<-lm(Numeric~Year,hunger[hunger$Sex=="Female",])
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth<-lm(Numeric~Year+Sex,hunger)
summary(lmBoth)$coef
summary(lmBoth)
lmInter<-lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which=1)
fit <- lm(y ~ x, out2[-1,])
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] -
| predict(fitno, out2[1,])
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
hatvalues(fit)
head(hatvalues(fit)
)
ew
qwe<-rewq
sigma<-sqrt(deviance(fit)/df)
sigma<-sqrt(deviance(fit)/5)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd<-resid(fit)/sigma*sqrt(1-hatvalues(fit))
rstd <- resid(fit)/(sigma * sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit,  which=2)
fitno
sigma1 <- sqrt(deviance(fitno)/df.residual(fitno))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
predict(fitno, out2)-predict(fit, out2)
y <- predict(fitno, out2)-predict(fit, out2
)
dy <- predict(fitno, out2)-predict(fit, out2)
sum(dy)^2/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5)
rpg1()
rgp1()
rgp2()
head(swiss)
mdl<-lm(Fertility~.)
mdl<-lm(Fertility~.,swiss)
vif(mdl)
mdl<-lm(Fertility~.-Examination,swiss)
mdl2 <- lm(Fertility ~ . -Examination, swiss)
vif(mdl2)
library(swirl)
swirl()
install.packages("pgmm")
library(pgmm)
data(olive)
olive = olive[,-1]
model<-train(Area ~ ., data=olive, method="rpart2")
library(caret)
model<-train(Area ~ ., data=olive, method="rpart2")
newdata = as.data.frame(t(colMeans(olive)))
predict(model,newdata)
plot(model)
plot(model$finalModel)
text(model$finalModel)
olive$Area<-as.factor(olive$Area)
model<-train(Area ~ ., data=olive, method="rpart2")
predict(model,newdata)
plot(model$finalModel)
> text(model$finalModel)
text(model$finalModel)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
install.packages("ElemStatLearn")
)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
model<- train(chd ~ age + alcohol + obesity + tobacco + typea + ldl, data=trainSA, method="glm", family="binomial")
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
a<-predict(model,trainSA)
missClass(train$chd,a)
missClass(trainSA$chd,a)
b<-predict(model,testSA)
missClass(trainSA$chd,b)
missClass(testSA$chd,b)
rm(list=ls())
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y <- as.factor(vowel.train$y)
vowel.test$y <- as.factor(vowel.test$y)
set.seed(33833)
mel<-train(y~.,data=vowel.train,method="rf")
varImp(model$finalmodel)
varImp(mel$finalmodel)
varImp(mel$finalModel)
sort(varImp(mel$finalModel))
sort(varImp(mel$finalModel),ascending)
sort(varImp(mel$finalModel),decreasing=FALSE)
order(varImp(mel$finalModel),decreasing = T)
slidify::publish(user="zeelich7",repo="dataproducts")
publish(title = 'dataproducts', 'index.html', host = 'rpubs')
slidify::publish(title = 'dataproducts', 'index.html', host = 'rpubs')
slidify::publish(title = 'dataproducts', 'index2.html', host = 'rpubs')
slidify::publish(title = 'dataproducts', 'index.html', host = 'rpubs')
setwd("~/GitHub/dataproducts")
slidify::publish(title = 'dataproducts', 'index.html', host = 'rpubs')
